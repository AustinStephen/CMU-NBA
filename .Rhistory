if (regseason1516$Visitor[i] == TRUE) { #if they are visitor
adj_score_diffs1516 = c(adj_score_diffs1516,
regseason1516$score_diff[i] - regseason1516$avg_score_diff_away[i])
}
else { #if they are home
adj_score_diffs1516 = c(adj_score_diffs1516,
regseason1516$score_diff[i] - regseason1516$avg_score_diff_home[i])
}
}
regseason1516 <- regseason1516 %>%
mutate(adjusted_score_diff = adj_score_diffs1516)
dtd_records1516 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/record_by_day_2015_16_season.csv")
dtd_records1516$Team <- stringr::str_replace(dtd_records1516$team, '\\*', '')
dtd_records1516 <- select(dtd_records1516, c(date, Team, w, l, w_lpercent, ps_g, pa_g)) %>%
rename(Date = date)
regseason1516 <- merge(x= regseason1516, y = dtd_records1516,
by = c("Date", "Team"))
opp_win_records1516 <- c()
for (i in c(1:nrow(regseason1516))) {
opp <- regseason1516$Opponent[i]
day <- regseason1516$Date[i]
opp_record <- filter(dtd_records1516,
(Team == opp & Date == day))$w_lpercent[1]
opp_win_records1516 <- c(opp_win_records1516, opp_record)
}
regseason1516 <- regseason1516 %>%
mutate(opp_win_percent = opp_win_records1516)
regseason1516 <- regseason1516 %>%
mutate(win_percent_diff = w_lpercent - opp_win_percent)
ratings1516 <- get_general(
season = 2015,
type = "Team",
measure_type = "Advanced",
per_mode = "Totals",
season_type = "Regular+Season",
season_segment = "",
game_segment = "",
date_from = "",
date_to = "",
outcome = "",
period = "0",
opponent_team_id = "0",
team_id = "0",
verbose = TRUE
) %>%
select(c("team_name", "off_rating", "def_rating", "net_rating", "pace")) %>%
rename(Team = team_name)
regseason1516 <- merge(x = regseason1516, y = ratings1516,
by = "Team")
regseason1516 <- merge(x = regseason1516, y = ratings1516,
by.x = "Opponent", by.y = "Team")
regseason1516 <- regseason1516 %>%
rename(off_rating = "off_rating.x") %>%
rename(def_rating = "def_rating.x") %>%
rename(net_rating = "net_rating.x") %>%
rename(pace = "pace.x") %>%
rename(opp_off_rating = "off_rating.y") %>%
rename(opp_def_rating = "def_rating.y") %>%
rename(opp_net_rating = "net_rating.y") %>%
rename(opp_pace = "pace.y")
regseason1516 <- regseason1516 %>%
mutate(net_rating_diff = net_rating - opp_net_rating) %>%
mutate(pace_diff = pace - opp_pace)
write_csv(regseason1516, "/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1516.csv")
unique(regseason1516$Rest)
data1415 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1415.csv")
# Info about flight distance, time, direction, coordinates
travel1617 <- nba_travel(start_season = 2017,
end_season = 2017,
return_home = 3,
phase = "RS") #airball
# Data about back to back, first or second leg etc.
density1617 <- nba_density(travel1617) #airball
#this data has tipoff time
schedule1617 <- get_schedule(2016) %>%
filter(season_type == "REG") #NBAr
#Merge travel1617 and density1617 with one another.
#Remove first games of the season because there were 15 days of rest prior
travel_and_density1617 <- merge(x = travel1617, y = density1617,
by = c("Date", "Team"), suffix = c("", ".y")) %>%
select_at(vars(-ends_with(".y"))) %>%
select_at(vars(-starts_with("d."))) %>%
mutate(Visitor = (Location == "Away"))
regseason1617 <- mutate(travel_and_density1617, Win = (travel_and_density1617$"W/L" == "W")) %>%
select(c("Season", "Month", "Week", "Date", "Team", "Opponent", "Visitor", "City", "Win",
"Distance", "Route", "Rest", "TZ", "Shift (hrs)", "Flight Time", "Direction (E/W)",
"Latitude", "Longitude", "B2B", "B2B-1st", "B2B-2nd", "3in4", "4in5", "5in7")) %>%
rename(b2b_1st = "B2B-2nd") %>%
rename(b2b_2nd = "B2B-1st") %>%
rename(direction = "Direction (E/W)") %>%
rename(shift = "Shift (hrs)") %>%
rename(three_in_four = "3in4") %>%
rename(four_in_five = "4in5") %>%
rename(five_in_seven = "5in7")
#The given flight durations are funky and have strings but I just wanna extra the time
flight_durations1617 = c()
for (d in regseason1617$"Flight Time") {
second_to_last = substr(d, nchar(d) - 1, nchar(d)-1)
if (second_to_last == "e") { #"~55 minutes"
flight_durations1617 = c(flight_durations1617, 1)
}
else if (second_to_last == "r") {
hours = as.double(substr(d, 2, 5))
flight_durations1617 = c(flight_durations1617, hours)
}
else {
flight_durations1617 = c(flight_durations1617, 0)
}
}
regseason1617 <- mutate(regseason1617, flight_duration = flight_durations1617) %>%
select(- "Flight Time")
team_boxscores1617 <- get_team_boxscore(2016) %>%
subset(select = season_year:plus_minus) %>%
mutate(Date = substr(game_date, 0, 10)) %>%
rename(Team = team_name) %>%
select(c(Date, game_id,Team, matchup, plus_minus)) #Patrick Chodowski
regseason1617 <- merge(x = regseason1617, y = team_boxscores1617,
by = c("Date", "Team")) %>%
rename(score_diff = plus_minus) %>%
mutate(traveling_west = (direction == "West")) %>%
mutate(traveling_east = (direction == "East")) %>%
mutate(B2B = (B2B == "Yes")) %>%
mutate(b2b_1st = (b2b_1st == "Yes")) %>%
mutate(b2b_2nd = (b2b_2nd == "Yes")) %>%
mutate(three_in_four = (three_in_four == "Yes")) %>%
mutate(four_in_five = (four_in_five == "Yes")) %>%
mutate(five_in_seven = (five_in_seven == "Yes"))
avg_score_diffs_home1617 <- regseason1617 %>%
filter(Visitor == FALSE) %>%
group_by(Team) %>%
summarise_at(vars(score_diff),
list(avg_score_diff_home = mean))
avg_score_diffs_away1617 <- regseason1617 %>%
filter(Visitor == TRUE) %>%
group_by(Team) %>%
summarise_at(vars(score_diff),
list(avg_score_diff_away = mean))
regseason1617 <- merge(x = regseason1617, y = avg_score_diffs_home1617,
by = "Team")
regseason1617 <- merge(x = regseason1617, y = avg_score_diffs_away1617,
by = "Team") %>%
arrange(Date)
#Adjusted_score_diffs accounts for if the team was home or away
adj_score_diffs1617 = c()
for (i in c(1:nrow(regseason1617))) {
if (regseason1617$Visitor[i] == TRUE) { #if they are visitor
adj_score_diffs1617 = c(adj_score_diffs1617,
regseason1617$score_diff[i] - regseason1617$avg_score_diff_away[i])
}
else { #if they are home
adj_score_diffs1617 = c(adj_score_diffs1617,
regseason1617$score_diff[i] - regseason1617$avg_score_diff_home[i])
}
}
regseason1617 <- regseason1617 %>%
mutate(adjusted_score_diff = adj_score_diffs1617)
dtd_records1617 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/record_by_day_2016_17_season.csv")
dtd_records1617$Team <- stringr::str_replace(dtd_records1617$team, '\\*', '')
dtd_records1617 <- select(dtd_records1617, c(date, Team, w, l, w_lpercent, ps_g, pa_g)) %>%
rename(Date = date)
typeof(regseason1617$Date[1])
typeof(dtd_records1617$Date[1])
regseason1617 <- merge(x= regseason1617, y = dtd_records1617,
by = c("Date", "Team"))
opp_win_records1617 <- c()
for (i in c(1:nrow(regseason1617))) {
opp <- regseason1617$Opponent[i]
day <- regseason1617$Date[i]
opp_record <- filter(dtd_records1617,
(Team == opp & Date == day))$w_lpercent[1]
opp_win_records1617 <- c(opp_win_records1617, opp_record)
}
regseason1617 <- regseason1617 %>%
mutate(opp_win_percent = opp_win_records1617)
regseason1617 <- regseason1617 %>%
mutate(win_percent_diff = w_lpercent - opp_win_percent)
ratings1617 <- get_general(
season = 2016,
type = "Team",
measure_type = "Advanced",
per_mode = "Totals",
season_type = "Regular+Season",
season_segment = "",
game_segment = "",
date_from = "",
date_to = "",
outcome = "",
period = "0",
opponent_team_id = "0",
team_id = "0",
verbose = TRUE
) %>%
select(c("team_name", "off_rating", "def_rating", "net_rating", "pace")) %>%
rename(Team = team_name)
regseason1617 <- merge(x = regseason1617, y = ratings1617,
by = "Team")
regseason1617 <- merge(x = regseason1617, y = ratings1617,
by.x = "Opponent", by.y = "Team")
regseason1617 <- regseason1617 %>%
rename(off_rating = "off_rating.x") %>%
rename(def_rating = "def_rating.x") %>%
rename(net_rating = "net_rating.x") %>%
rename(pace = "pace.x") %>%
rename(opp_off_rating = "off_rating.y") %>%
rename(opp_def_rating = "def_rating.y") %>%
rename(opp_net_rating = "net_rating.y") %>%
rename(opp_pace = "pace.y")
regseason1617 <- regseason1617 %>%
mutate(net_rating_diff = net_rating - opp_net_rating) %>%
mutate(pace_diff = pace - opp_pace)
write_csv(regseason1617, "/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1617.csv")
data1617 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1617.csv")
unique(regseason1617$Rest)
# Info about flight distance, time, direction, coordinates
travel1718 <- nba_travel(start_season = 2018,
end_season = 2018,
return_home = 3,
phase = "RS") #airball
# Data about back to back, first or second leg etc.
density1718 <- nba_density(travel1718) #airball
#this data has tipoff time
schedule1718 <- get_schedule(2017) %>%
filter(season_type == "REG") #NBAr
#Merge travel1718 and density1718 with one another.
#Remove first games of the season because there were 15 days of rest prior
travel_and_density1718 <- merge(x = travel1718, y = density1718,
by = c("Date", "Team"), suffix = c("", ".y")) %>%
select_at(vars(-ends_with(".y"))) %>%
select_at(vars(-starts_with("d."))) %>%
mutate(Visitor = (Location == "Away"))
regseason1718 <- mutate(travel_and_density1718, Win = (travel_and_density1718$"W/L" == "W")) %>%
select(c("Season", "Month", "Week", "Date", "Team", "Opponent", "Visitor", "City", "Win",
"Distance", "Route", "Rest", "TZ", "Shift (hrs)", "Flight Time", "Direction (E/W)",
"Latitude", "Longitude", "B2B", "B2B-1st", "B2B-2nd", "3in4", "4in5", "5in7")) %>%
rename(b2b_1st = "B2B-2nd") %>%
rename(b2b_2nd = "B2B-1st") %>%
rename(direction = "Direction (E/W)") %>%
rename(shift = "Shift (hrs)") %>%
rename(three_in_four = "3in4") %>%
rename(four_in_five = "4in5") %>%
rename(five_in_seven = "5in7")
#The given flight durations are funky and have strings but I just wanna extra the time
flight_durations1718 = c()
for (d in regseason1718$"Flight Time") {
second_to_last = substr(d, nchar(d) - 1, nchar(d)-1)
if (second_to_last == "e") { #"~55 minutes"
flight_durations1718 = c(flight_durations1718, 1)
}
else if (second_to_last == "r") {
hours = as.double(substr(d, 2, 5))
flight_durations1718 = c(flight_durations1718, hours)
}
else {
flight_durations1718 = c(flight_durations1718, 0)
}
}
regseason1718 <- mutate(regseason1718, flight_duration = flight_durations1718) %>%
select(- "Flight Time")
team_boxscores1718 <- get_team_boxscore(2017) %>%
subset(select = season_year:plus_minus) %>%
mutate(Date = substr(game_date, 0, 10)) %>%
rename(Team = team_name) %>%
select(c(Date, game_id,Team, matchup, plus_minus))
regseason1718 <- merge(x = regseason1718, y = team_boxscores1718,
by = c("Date", "Team")) %>%
rename(score_diff = plus_minus) %>%
mutate(traveling_west = (direction == "West")) %>%
mutate(traveling_east = (direction == "East")) %>%
mutate(B2B = (B2B == "Yes")) %>%
mutate(b2b_1st = (b2b_1st == "Yes")) %>%
mutate(b2b_2nd = (b2b_2nd == "Yes")) %>%
mutate(three_in_four = (three_in_four == "Yes")) %>%
mutate(four_in_five = (four_in_five == "Yes")) %>%
mutate(five_in_seven = (five_in_seven == "Yes"))
avg_score_diffs_home1718 <- regseason1718 %>%
filter(Visitor == FALSE) %>%
group_by(Team) %>%
summarise_at(vars(score_diff),
list(avg_score_diff_home = mean))
avg_score_diffs_away1718 <- regseason1718 %>%
filter(Visitor == TRUE) %>%
group_by(Team) %>%
summarise_at(vars(score_diff),
list(avg_score_diff_away = mean))
regseason1718 <- merge(x = regseason1718, y = avg_score_diffs_home1718,
by = "Team")
regseason1718 <- merge(x = regseason1718, y = avg_score_diffs_away1718,
by = "Team") %>%
arrange(Date)
#Adjusted_score_diffs accounts for if the team was home or away
adj_score_diffs1718 = c()
for (i in c(1:nrow(regseason1718))) {
if (regseason1718$Visitor[i] == TRUE) { #if they are visitor
adj_score_diffs1718 = c(adj_score_diffs1718,
regseason1718$score_diff[i] - regseason1718$avg_score_diff_away[i])
}
else { #if they are home
adj_score_diffs1718 = c(adj_score_diffs1718,
regseason1718$score_diff[i] - regseason1718$avg_score_diff_home[i])
}
}
regseason1718 <- regseason1718 %>%
mutate(adjusted_score_diff = adj_score_diffs1718)
dtd_records1718 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/record_by_day_2017_18_season.csv")
dtd_records1718$Team <- stringr::str_replace(dtd_records1718$team, '\\*', '')
dtd_records1718 <- select(dtd_records1718, c(date, Team, w, l, w_lpercent, ps_g, pa_g)) %>%
rename(Date = date)
regseason1718 <- merge(x= regseason1718, y = dtd_records1718,
by = c("Date", "Team"))
opp_win_records1718 <- c()
for (i in c(1:nrow(regseason1718))) {
opp <- regseason1718$Opponent[i]
day <- regseason1718$Date[i]
opp_record <- filter(dtd_records1718,
(Team == opp & Date == day))$w_lpercent[1]
opp_win_records1718 <- c(opp_win_records1718, opp_record)
}
regseason1718 <- regseason1718 %>%
mutate(opp_win_percent = opp_win_records1718)
regseason1718 <- regseason1718 %>%
mutate(win_percent_diff = w_lpercent - opp_win_percent)
ratings1718 <- get_general(
season = 2017,
type = "Team",
measure_type = "Advanced",
per_mode = "Totals",
season_type = "Regular+Season",
season_segment = "",
game_segment = "",
date_from = "",
date_to = "",
outcome = "",
period = "0",
opponent_team_id = "0",
team_id = "0",
verbose = TRUE
) %>%
select(c("team_name", "off_rating", "def_rating", "net_rating", "pace")) %>%
rename(Team = team_name)
regseason1718 <- merge(x = regseason1718, y = ratings1718,
by = "Team")
regseason1718 <- merge(x = regseason1718, y = ratings1718,
by.x = "Opponent", by.y = "Team")
regseason1718 <- regseason1718 %>%
rename(off_rating = "off_rating.x") %>%
rename(def_rating = "def_rating.x") %>%
rename(net_rating = "net_rating.x") %>%
rename(pace = "pace.x") %>%
rename(opp_off_rating = "off_rating.y") %>%
rename(opp_def_rating = "def_rating.y") %>%
rename(opp_net_rating = "net_rating.y") %>%
rename(opp_pace = "pace.y")
regseason1718 <- regseason1718 %>%
mutate(net_rating_diff = net_rating - opp_net_rating) %>%
mutate(pace_diff = pace - opp_pace)
write_csv(regseason1718, "/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1718.csv")
data1718 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1718.csv")
unique(regseason1718$Rest)
# Info about flight distance, time, direction, coordinates
travel1819 <- nba_travel(start_season = 2019,
end_season = 2019,
return_home = 3,
phase = "RS") #airball
View(travel1718)
# Info about flight distance, time, direction, coordinates
travel1819 <- nba_travel(start_season = 2019,
end_season = 2019,
return_home = 3,
phase = "RS") #airball
# Data about back to back, first or second leg etc.
density1819 <- nba_density(travel1819) #airball
#this data has tipoff time
schedule1819 <- get_schedule(2018) %>%
filter(season_type == "REG") #NBAr
#Merge travel1617 and density1617 with one another.
#Remove first games of the season because there were 15 days of rest prior
travel_and_density1819 <- merge(x = travel1819, y = density1819,
by = c("Date", "Team"), suffix = c("", ".y")) %>%
select_at(vars(-ends_with(".y"))) %>%
select_at(vars(-starts_with("d."))) %>%
mutate(Visitor = (Location == "Away"))
regseason1819 <- mutate(travel_and_density1819, Win = (travel_and_density1819$"W/L" == "W")) %>%
select(c("Season", "Month", "Week", "Date", "Team", "Opponent", "Visitor", "City", "Win",
"Distance", "Route", "Rest", "TZ", "Shift (hrs)", "Flight Time", "Direction (E/W)",
"Latitude", "Longitude", "B2B", "B2B-1st", "B2B-2nd", "3in4", "4in5", "5in7")) %>%
rename(b2b_1st = "B2B-2nd") %>%
rename(b2b_2nd = "B2B-1st") %>%
rename(direction = "Direction (E/W)") %>%
rename(shift = "Shift (hrs)") %>%
rename(three_in_four = "3in4") %>%
rename(four_in_five = "4in5") %>%
rename(five_in_seven = "5in7")
#The given flight durations are funky and have strings but I just wanna extra the time
flight_durations1819 = c()
for (d in regseason1819$"Flight Time") {
second_to_last = substr(d, nchar(d) - 1, nchar(d)-1)
if (second_to_last == "e") { #"~55 minutes"
flight_durations1819 = c(flight_durations1819, 1)
}
else if (second_to_last == "r") {
hours = as.double(substr(d, 2, 5))
flight_durations1819 = c(flight_durations1819, hours)
}
else {
flight_durations1819 = c(flight_durations1819, 0)
}
}
regseason1819 <- mutate(regseason1819, flight_duration = flight_durations1819) %>%
select(- "Flight Time")
team_boxscores1819 <- get_team_boxscore(2018) %>%
subset(select = season_year:plus_minus) %>%
mutate(Date = substr(game_date, 0, 10)) %>%
rename(Team = team_name) %>%
select(c(Date, game_id,Team, matchup, plus_minus))
regseason1819 <- merge(x = regseason1819, y = team_boxscores1819,
by = c("Date", "Team")) %>%
rename(score_diff = plus_minus) %>%
mutate(traveling_west = (direction == "West")) %>%
mutate(traveling_east = (direction == "East")) %>%
mutate(B2B = (B2B == "Yes")) %>%
mutate(b2b_1st = (b2b_1st == "Yes")) %>%
mutate(b2b_2nd = (b2b_2nd == "Yes")) %>%
mutate(three_in_four = (three_in_four == "Yes")) %>%
mutate(four_in_five = (four_in_five == "Yes")) %>%
mutate(five_in_seven = (five_in_seven == "Yes"))
avg_score_diffs_home1819 <- regseason1819 %>%
filter(Visitor == FALSE) %>%
group_by(Team) %>%
summarise_at(vars(score_diff),
list(avg_score_diff_home = mean))
avg_score_diffs_away1819 <- regseason1819 %>%
filter(Visitor == TRUE) %>%
group_by(Team) %>%
summarise_at(vars(score_diff),
list(avg_score_diff_away = mean))
regseason1819 <- merge(x = regseason1819, y = avg_score_diffs_home1819,
by = "Team")
regseason1819 <- merge(x = regseason1819, y = avg_score_diffs_away1819,
by = "Team") %>%
arrange(Date)
#Adjusted_score_diffs accounts for if the team was home or away
adj_score_diffs1819 = c()
for (i in c(1:nrow(regseason1819))) {
if (regseason1819$Visitor[i] == TRUE) { #if they are visitor
adj_score_diffs1819 = c(adj_score_diffs1819,
regseason1819$score_diff[i] - regseason1819$avg_score_diff_away[i])
}
else { #if they are home
adj_score_diffs1819 = c(adj_score_diffs1819,
regseason1819$score_diff[i] - regseason1819$avg_score_diff_home[i])
}
}
regseason1819 <- regseason1819 %>%
mutate(adjusted_score_diff = adj_score_diffs1819)
dtd_records1819 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/record_by_day_2018_19_season.csv")
dtd_records1819$Team <- stringr::str_replace(dtd_records1819$team, '\\*', '')
dtd_records1819 <- select(dtd_records1819, c(date, Team, w, l, w_lpercent, ps_g, pa_g)) %>%
rename(Date = date)
regseason1819 <- merge(x= regseason1819, y = dtd_records1819,
by = c("Date", "Team"))
opp_win_records1819 <- c()
for (i in c(1:nrow(regseason1819))) {
opp <- regseason1819$Opponent[i]
day <- regseason1819$Date[i]
opp_record <- filter(dtd_records1819,
(Team == opp & Date == day))$w_lpercent[1]
opp_win_records1819 <- c(opp_win_records1819, opp_record)
}
regseason1819 <- regseason1819 %>%
mutate(opp_win_percent = opp_win_records1819)
?ballr
NBASeasonTeamByYear(2015)
??nbastatR
teams_annual_stats
teams_annual_stats()
??NBAr
get_general(2015, type = "Team", measure_type = "General")
a <- get_general(2015, type = "Team", "Base")
ratings1718 <- get_general(
season = 2017,
type = "Team",
measure_type = "Advanced",
per_mode = "Totals",
season_type = "Regular+Season",
season_segment = "",
game_segment = "",
date_from = "",
date_to = "",
outcome = "",
period = "0",
opponent_team_id = "0",
team_id = "0",
verbose = TRUE
) #%>%
ratings1718 <- get_general(
season = 2017,
type = "Team",
measure_type = "Advanced",
per_mode = "Totals",
season_type = "Regular+Season",
season_segment = "",
game_segment = "",
date_from = "",
date_to = "",
outcome = "",
period = "0",
opponent_team_id = "0",
team_id = "0",
verbose = TRUE
) %>%
select(c("team_name", "off_rating", "def_rating", "net_rating", "pace")) %>%
rename(Team = team_name)
