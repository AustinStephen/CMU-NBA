axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
ggplot() + geom_polygon(data = states, aes(x=long, y = lat, fill = region, group = group), fill = "azure2", color = "light gray") +
coord_fixed(1.3) +
geom_point(data = coords_and_distance, aes(x=Longitude, y=Latitude,
size = total_distance_traveled),
alpha = 0.8) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
ggplot() + geom_polygon(data = states, aes(x=long, y = lat, fill = region, group = group), fill = "azure2", color = gray") +
coord_fixed(1.3) +
geom_point(data = coords_and_distance, aes(x=Longitude, y=Latitude,
size = total_distance_traveled),
alpha = 0.8) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
#color = Team,
#fill = Team)) +
#scale_fill_teams(guide = FALSE) +
#scale_color_teams(4, guide = FALSE)
league_pal("nba")
teamcolors %>%
filter(grepl("New ", name)) %>%
pull(logo) %>%
knitr::include_graphics()
test <- teamcolors %>%
group_by(league) %>%
summarize(
num_teams = n(),
num_logos = sum(!is.na(logo))
)
#every away team, distribution of score differential, bracketed by the time zone shift
ggplot() + geom_polygon(data = states, aes(x=long, y = lat, fill = region, group = group), fill = "azure2", color = "gray") +
coord_fixed(1.3) +
geom_point(data = coords_and_distance, aes(x=Longitude, y=Latitude,
size = total_distance_traveled),
alpha = 0.8) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
ggplot() + geom_polygon(data = states, aes(x=long, y = lat, fill = region, group = group), fill = "azure2", color = "gray") +
coord_fixed(1.3) +
geom_point(data = coords_and_distance, aes(x=Longitude, y=Latitude,
size = total_distance_traveled),
alpha = 0.8) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank(),
legend.position = bottom)
ggplot() + geom_polygon(data = states, aes(x=long, y = lat, fill = region, group = group), fill = "azure2", color = "gray") +
coord_fixed(1.3) +
geom_point(data = coords_and_distance, aes(x=Longitude, y=Latitude,
size = total_distance_traveled),
alpha = 0.8) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank(),
legend.position = "bottom")
data1617 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1617.csv")
data1617 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1617.csv")
data1718 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1718.csv")
data1819 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1819.csv")
together <- rbind(data1617, data1718)
together <- rbind(together, data1819)
visitors <- filter(together, Visitor == TRUE)
test_rest_visitors <- select(visitors, c(Rest, score_diff)) %>%
group_by(Rest) %>%
summarise_at(vars(score_diff),
list(avg_adj_score_diff = mean))
View(test_rest_visitors)
together <- rbind(data1617, data1718)
together <- rbind(together, data1819)
visitors <- filter(together, Visitor == TRUE)
test_rest_visitors <- select(visitors, c(Rest, score_diff)) %>%
group_by(Rest) %>%
summarise_at(vars(score_diff),
list(avg_adj_score_diff = mean))
test_shift_visitors <- select(visitors, c(shift, score_diff)) %>%
group_by(shift) %>%
summarise_at(vars(score_diff),
list(avg_adj_score_diff = mean))
View(test_shift_visitors)
test_34_visitors <- select(visitors, c(three_in_four, score_diff)) %>%
group_by(three_in_four) %>%
summarise_at(vars(score_diff),
list(avg_adj_score_diff = mean))
View(test_34_visitors)
test_b2b_visitors <- select(visitors, c(b2b_2nd, score_diff)) %>%
group_by(b2b_2nd) %>%
summarise_at(vars(score_diff),
list(avg_adj_score_diff = mean))
View(test_b2b_visitors)
test_45_visitors <- select(visitors, c(four_in_five, score_diff)) %>%
group_by(four_in_five) %>%
summarise_at(vars(score_diff),
list(avg_adj_score_diff = mean))
View(test_45_visitors)
test_57_visitors <- select(visitors, c(five_in_seven, score_diff)) %>%
group_by(five_in_seven) %>%
summarise_at(vars(score_diff),
list(avg_adj_score_diff = mean))
test_rest_visitors <- select(visitors, c(Rest, adjusted_score_diff)) %>%
group_by(Rest) %>%
summarise_at(vars(adjusted_score_diff),
list(avg_adj_score_diff = mean))
test_shift_visitors <- select(visitors, c(shift, adjusted_score_diff)) %>%
group_by(shift) %>%
summarise_at(vars(adjusted_score_diff),
list(avg_adj_score_diff = mean))
test_b2b_visitors <- select(visitors, c(b2b_2nd, adjusted_score_diff)) %>%
group_by(b2b_2nd) %>%
summarise_at(vars(adjusted_score_diff),
list(avg_adj_score_diff = mean))
test_34_visitors <- select(visitors, c(three_in_four, adjusted_score_diff)) %>%
group_by(three_in_four) %>%
summarise_at(vars(adjusted_score_diff),
list(avg_adj_score_diff = mean))
test_45_visitors <- select(visitors, c(four_in_five, adjusted_score_diff)) %>%
group_by(four_in_five) %>%
summarise_at(vars(adjusted_score_diff),
list(avg_adj_score_diff = mean))
test_57_visitors <- select(visitors, c(five_in_seven, adjusted_score_diff)) %>%
group_by(five_in_seven) %>%
summarise_at(vars(adjusted_score_diff),
list(avg_adj_score_diff = mean))
View(test_34_visitors)
#the numbers here are super tiny
test_west_visitor <- select(visitors, c(traveling_west, adjusted_score_diff)) %>%
group_by(traveling_west) %>%
summarise_at(vars(adjusted_score_diff),
list(avg_adj_score_diff = mean))
View(test_west_visitor)
#In contrast, traveling east is bad for west teams. Still small numbers
test_east_visitor <- select(visitors, c(traveling_east, adjusted_score_diff)) %>%
group_by(traveling_east) %>%
summarise_at(vars(adjusted_score_diff),
list(avg_adj_score_diff = mean))
View(test_east_visitor)
View(test_34_visitors)
View(test_45_visitors)
View(test_b2b_visitors)
View(test_57_visitors)
View(test_east_visitor)
View(test_west_visitor)
View(test_rest_visitors)
View(test_shift_visitors)
ggplot(visitors, aes(x = win_percent_diff, y= adjusted_score_diff)) +
geom_point(alpha = 0.5)
together <- together %>%
rename(difference_from_avg_score_diff = adjusted_score_diff)
View(together)
# Info about flight distance, time, direction, coordinates
travel1516 <- nba_travel(start_season = 2016,
end_season = 2016,
return_home = 3,
phase = "RS") #airball
library(devtools)
library(airball)
library(nbastatR)
library(tidyverse)
library(ggplot2)
library(echarts4r)
library(echarts4r.assets)
library(nbastatR)
library(ballr)
library(NBAr)
library(lubridate)
library(ballr)
travel1516 <- nba_travel(start_season = 2016,
end_season = 2016,
return_home = 3,
phase = "RS") #airball
View(travel1516)
# Data about back to back, first or second leg etc.
density1516 <- nba_density(travel1516) #airball
#Merge travel1617 and density1617 with one another.
#Remove first games of the season because there were 15 days of rest prior
travel_and_density1516 <- merge(x = travel1516, y = density1516,
by = c("Date", "Team"), suffix = c("", ".y")) %>%
select_at(vars(-ends_with(".y"))) %>%
select_at(vars(-starts_with("d."))) %>%
mutate(Visitor = (Location == "Away")) %>%
filter(Rest != 15)
regseason1516 <- mutate(travel_and_density1516, Win = (travel_and_density1516$"W/L" == "W")) %>%
select(c("Season", "Month", "Week", "Date", "Team", "Opponent", "Visitor", "City", "Win",
"Distance", "Route", "Rest", "TZ", "Shift (hrs)", "Flight Time", "Direction (E/W)",
"Latitude", "Longitude", "B2B", "B2B-1st", "B2B-2nd", "3in4", "4in5", "5in7")) %>%
rename(b2b_1st = "B2B-2nd") %>%
rename(b2b_2nd = "B2B-1st") %>%
rename(direction = "Direction (E/W)") %>%
rename(shift = "Shift (hrs)") %>%
rename(three_in_four = "3in4") %>%
rename(four_in_five = "4in5") %>%
rename(five_in_seven = "5in7")
#The given flight durations are funky and have strings but I just wanna extra the time
flight_durations1516 = c()
for (d in regseason1516$"Flight Time") {
second_to_last = substr(d, nchar(d) - 1, nchar(d)-1)
if (second_to_last == "e") { #"~55 minutes"
flight_durations1516 = c(flight_durations1516, 1)
}
else if (second_to_last == "r") {
hours = as.double(substr(d, 2, 5))
flight_durations1516 = c(flight_durations1516, hours)
}
else {
flight_durations1516 = c(flight_durations1516, 0)
}
}
regseason1516 <- mutate(regseason1516, flight_duration = flight_durations1516) %>%
select(- "Flight Time")
team_boxscores1516 <- get_team_boxscore(2015) %>%
subset(select = season_year:plus_minus) %>%
mutate(Date = substr(game_date, 0, 10)) %>%
rename(Team = team_name) %>%
select(c(Date, game_id,Team, matchup, plus_minus))
regseason1516 <- merge(x = regseason1516, y = team_boxscores1516,
by = c("Date", "Team")) %>%
rename(score_diff = plus_minus) %>%
mutate(traveling_west = (direction == "West")) %>%
mutate(traveling_east = (direction == "East")) %>%
mutate(B2B = (B2B == "Yes")) %>%
mutate(b2b_1st = (b2b_1st == "Yes")) %>%
mutate(b2b_2nd = (b2b_2nd == "Yes")) %>%
mutate(three_in_four = (three_in_four == "Yes")) %>%
mutate(four_in_five = (four_in_five == "Yes")) %>%
mutate(five_in_seven = (five_in_seven == "Yes"))
avg_score_diffs_home1516 <- regseason1516 %>%
filter(Visitor == FALSE) %>%
group_by(Team) %>%
summarise_at(vars(score_diff),
list(avg_score_diff_home = mean))
avg_score_diffs_away1516 <- regseason1516 %>%
filter(Visitor == TRUE) %>%
group_by(Team) %>%
summarise_at(vars(score_diff),
list(avg_score_diff_away = mean))
View(avg_score_diffs_away1516)
View(avg_score_diffs_home1516)
regseason1516 <- merge(x = regseason1516, y = avg_score_diffs_home1516,
by = "Team")
regseason1516 <- merge(x = regseason1516, y = avg_score_diffs_away1516,
by = "Team") %>%
arrange(Date)
#Adjusted_score_diffs accounts for if the team was home or away
adj_score_diffs1516 = c()
for (i in c(1:nrow(regseason1516))) {
if (regseason1516$Visitor[i] == TRUE) { #if they are visitor
adj_score_diffs1516 = c(adj_score_diffs1516,
regseason1516$score_diff[i] - regseason1516$avg_score_diff_away[i])
}
else { #if they are home
adj_score_diffs1516 = c(adj_score_diffs1516,
regseason1516$score_diff[i] - regseason1516$avg_score_diff_home[i])
}
}
regseason1516 <- regseason1516 %>%
mutate(adjusted_score_diff = adj_score_diffs1516)
ggplot(visitors, aes(x = Distance, y= adjusted_score_diff)) +
geom_point(alpha = 0.5)
ggplot(visitors, aes(x = flight_duration, y= adjusted_score_diff)) +
geom_point(alpha = 0.5)
ggplot(visitors, aes(x = win_percent_diff, y= adjusted_score_diff)) +
geom_point(alpha = 0.5)
?nbastatR
check <- teams_annual_stats(
all_active_teams = T,
season_types = c("Regular Season"),
modes = c("Totals"),
return_message = TRUE,
nest_data = F
)
View(check)
?airball
?NBAr
??NBAr
??airball
??NBAr
?nbastatR
check <- teams_seasons_info(
teams = NULL,
team_ids = NULL,
all_active_teams = T,
seasons = 2019,
season_types = "Regular Season",
nest_data = F,
return_message = T
)
View(check)
matthew <- teams_players_stats(
seasons = 2018,
types = "team",
tables = c("defense"),
season_types = "Regular Season",
measures = "Base",
modes = "PerGame",
defenses = "Overall",
is_plus_minus = F,
is_pace_adjusted = F,
periods = 0,
is_rank = F,
game_segments = NA,
divisions_against = NA,
conferences_against = NA,
date_from = NA,
date_to = NA,
last_n_games = 0,
locations = NA,
months = 0,
season_segments = NA,
opponents = NA,
countries = NA,
weights = NA,
outcomes = NA,
playoff_rounds = 0,
players_experience = NA,
players_positions = NA,
colleges = NA,
draft_picks = NA,
draft_years = NA,
game_scopes = NA,
heights = NA,
shot_clock_ranges = NA,
clutch_times = "Last 5 Minutes",
ahead_or_behind = "Ahead or Behind",
general_ranges = "Overall",
dribble_ranges = "0 Dribbles",
shot_distance_ranges = "By Zone",
touch_time_ranges = NA,
closest_defender_ranges = NA,
point_diffs = 5,
starters_bench = NA,
assign_to_environment = TRUE,
add_mode_names = T,
return_message = TRUE
)
matthew <- teams_players_stats(
seasons = 2018,
types = c("player", "team"),
tables = c("defense"),
season_types = "Regular Season",
measures = "Base",
modes = "PerGame",
defenses = "Overall",
is_plus_minus = F,
is_pace_adjusted = F,
periods = 0,
is_rank = F,
game_segments = NA,
divisions_against = NA,
conferences_against = NA,
date_from = NA,
date_to = NA,
last_n_games = 0,
locations = NA,
months = 0,
season_segments = NA,
opponents = NA,
countries = NA,
weights = NA,
outcomes = NA,
playoff_rounds = 0,
players_experience = NA,
players_positions = NA,
colleges = NA,
draft_picks = NA,
draft_years = NA,
game_scopes = NA,
heights = NA,
shot_clock_ranges = NA,
clutch_times = "Last 5 Minutes",
ahead_or_behind = "Ahead or Behind",
general_ranges = "Overall",
dribble_ranges = "0 Dribbles",
shot_distance_ranges = "By Zone",
touch_time_ranges = NA,
closest_defender_ranges = NA,
point_diffs = 5,
starters_bench = NA,
assign_to_environment = TRUE,
add_mode_names = T,
return_message = TRUE
)
teams_details(
teams = NULL,
team_ids = NULL,
all_teams = F,
assign_to_environment = TRUE,
return_message = T
)
teams_details(
teams = NULL,
team_ids = NULL,
all_teams = T,
assign_to_environment = TRUE,
return_message = T
)
bruh <- teams_details(
teams = NULL,
team_ids = NULL,
all_teams = T,
assign_to_environment = TRUE,
return_message = T
)
View(bruh)
bruhh <- teams_rankings(seasons = NULL, nest_data = F, return_message = T)
bruhh <- teams_rankings(seasons = 2015, nest_data = F, return_message = T)
bruhh <- teams_rankings(seasons = 2015)
View(bruhh)
??NBAr
a <- get_general(
season,
type = "team",
measure_type,
per_mode = "PerGame",
season_type = "Regular+Season",
season_segment = "",
game_segment = "",
date_from = "",
date_to = "",
outcome = "",
period = "0",
opponent_team_id = "0",
team_id = "0",
verbose = TRUE
)
a <- get_general(
season = 2015,
type = "team",
measure_type,
per_mode = "PerGame",
season_type = "Regular+Season",
season_segment = "",
game_segment = "",
date_from = "",
date_to = "",
outcome = "",
period = "0",
opponent_team_id = "0",
team_id = "0",
verbose = TRUE
)
a <- get_general(
season = 2015,
type = "team",
measure_type = "Base",
per_mode = "PerGame",
season_type = "Regular+Season",
season_segment = "",
game_segment = "",
date_from = "",
date_to = "",
outcome = "",
period = "0",
opponent_team_id = "0",
team_id = "0",
verbose = TRUE
)
a <- get_general(
season = 2015,
type = "Team",
measure_type = "Advanced",
per_mode = "Totals",
season_type = "Regular+Season",
season_segment = "",
game_segment = "",
date_from = "",
date_to = "",
outcome = "",
period = "0",
opponent_team_id = "0",
team_id = "0",
verbose = TRUE
)
View(a)
ratings1617 <- get_general(
season = 2016,
type = "Team",
measure_type = "Advanced",
per_mode = "Totals",
season_type = "Regular+Season",
season_segment = "",
game_segment = "",
date_from = "",
date_to = "",
outcome = "",
period = "0",
opponent_team_id = "0",
team_id = "0",
verbose = TRUE
)
View(ratings1617)
