by.x = "Opponent", by.y = "Team")
regseason1819 <- regseason1819 %>%
rename(off_rating = "off_rating.x") %>%
rename(def_rating = "def_rating.x") %>%
rename(net_rating = "net_rating.x") %>%
rename(pace = "pace.x") %>%
rename(opp_off_rating = "off_rating.y") %>%
rename(opp_def_rating = "def_rating.y") %>%
rename(opp_net_rating = "net_rating.y") %>%
rename(opp_pace = "pace.y")
regseason1819 <- regseason1819 %>%
mutate(net_rating_diff = net_rating - opp_net_rating) %>%
mutate(pace_diff = pace - opp_pace)
performance1819 <- get_general(
season = 2013,
type = "Team",
measure_type = "Base",
per_mode = "PerGame",
season_type = "Regular+Season",
season_segment = "",
game_segment = "",
date_from = "",
date_to = "",
outcome = "",
period = "0",
opponent_team_id = "0",
team_id = "0",
verbose = TRUE) %>%
rename(Team = team_name)
regseason1819 <- merge(regseason1819, performance1819,
by = "Team")
opp_performance1819 <- performance1819 %>%
select(c(Team, fgm,fg_pct, fg3m, fg3_pct, ftm, ft_pct, reb, ast, tov, stl, blk))
regseason1819 <- merge(x = regseason1819, y = opp_performance1819,
by.x = "Opponent", by.y = "Team")
regseason1819 <- regseason1819 %>%
rename(fgm = "fgm.x") %>%
rename(fg_pct = "fg_pct.x") %>%
rename(fg3m = "fg3m.x") %>%
rename(fg3_pct = "fg3_pct.x") %>%
rename(ftm = "ftm.x") %>%
rename(ft_pct = "ft_pct.x") %>%
rename(reb = "reb.x") %>%
rename(ast = "ast.x") %>%
rename(tov = "tov.x")  %>%
rename(stl = "stl.x") %>%
rename(blk = "blk.x")  %>%
rename(opp_fgm = "fgm.y") %>%
rename(opp_fg_pct = "fg_pct.y") %>%
rename(opp_fg3m = "fg3m.y") %>%
rename(opp_fg3_pct = "fg3_pct.y") %>%
rename(opp_ftm = "ftm.y") %>%
rename(opp_ft_pct = "ft_pct.y") %>%
rename(opp_reb = "reb.y") %>%
rename(opp_ast = "ast.y") %>%
rename(opp_tov = "tov.y") %>%
rename(opp_stl = "stl.y") %>%
rename(opp_blk = "blk.y")
write_csv(regseason1819, "/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1819.csv")
data1011 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1011.csv")
data1112 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1112.csv")
data1213 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1213.csv")
data1314 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1314.csv")
data1415 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1415.csv")
data1516 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1516.csv")
data1011 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1011.csv")
data1112 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1112.csv")
data1213 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1213.csv")
data1314 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1314.csv")
data1415 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1415.csv")
data1516 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1516.csv")
data1617 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1617.csv")
data1718 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1718.csv")
data1819 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1819.csv")
together <- rbind(data1011, data1112)
together <- rbind(together, data1213)
together <- rbind(together, data1314)
together <- rbind(together, data1415)
together <- rbind(together, data1516)
together <- rbind(together, data1617)
together <- rbind(together, data1718)
together <- rbind(together, data1819)
capped_score_diffs <- c()
for (i in c(1:nrow(together))) {
sd = together$score_diff[i]
if (sd < (-30)) {
sd = -30
}
else if (sd > 30) {
sd = 30
}
capped_score_diffs <- c(capped_score_diffs, sd)
}
together <- together %>%
mutate(capped_score_diff = capped_score_diffs) %>%
mutate(hours_shift = as.factor(shift))
together$hours_shift <-relevel(together$hours_shift, ref= "0")
together <- together %>%
select(-c(gp, "w.y", "l.y", min, w_pct, plus_minus:cfparams))
together <- together %>%
mutate(off_rating_diff = off_rating - opp_off_rating) %>%
mutate(def_rating_diff = def_rating - opp_def_rating) %>%
mutate(fgm_diff = fgm - opp_fgm) %>%
mutate(fg_pct_diff = fg_pct - opp_fg_pct) %>%
mutate(fg3m_diff = fg3m - opp_fg3m) %>%
mutate(fg3_pct_diff = fg3_pct - opp_fg3_pct) %>%
mutate(ftm_diff = ftm - opp_ftm) %>%
mutate(ft_pct_diff = ft_pct - opp_ft_pct) %>%
mutate(reb_diff = reb - opp_reb) %>%
mutate(ast_diff = ast- opp_ast) %>%
mutate(tov_diff = tov - opp_tov) %>%
mutate(stl_diff = stl - opp_stl) %>%
mutate(blk_diff = blk - opp_blk) %>%
mutate(win_percent_diff = win_percent_diff *100)
together <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/together.csv")
visitors <- filter(together, Visitor == TRUE)
no_duplicates <- together[!duplicated(together$game_id),]
init_lm <- lm(score_diff ~ win_percent_diff + net_rating_diff + Visitor + Rest + hours_shift,
data = no_duplicates )
summary(init_lm)
# This model does not use duplicates --------------------------------------
performance_lm <- lm(score_diff ~ net_rating_diff + fgm_diff+ fg_pct_diff +
fg3m_diff + fg3_pct_diff + ftm_diff + ft_pct_diff +
ast_diff + reb_diff + tov_diff + stl_diff + blk_diff,
data = no_duplicates)
data1011 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1011.csv")
data1112 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1112.csv")
data1213 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1213.csv")
data1314 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1314.csv")
data1415 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1415.csv")
data1516 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1516.csv")
data1617 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1617.csv")
data1718 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1718.csv")
data1819 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1819.csv")
together <- rbind(data1011, data1112)
together <- rbind(together, data1213)
together <- rbind(together, data1314)
together <- rbind(together, data1415)
together <- rbind(together, data1516)
together <- rbind(together, data1617)
together <- rbind(together, data1718)
together <- rbind(together, data1819)
capped_score_diffs <- c()
for (i in c(1:nrow(together))) {
sd = together$score_diff[i]
if (sd < (-30)) {
sd = -30
}
else if (sd > 30) {
sd = 30
}
capped_score_diffs <- c(capped_score_diffs, sd)
}
together <- together %>%
mutate(capped_score_diff = capped_score_diffs) %>%
mutate(hours_shift = as.factor(shift))
together$hours_shift <-relevel(together$hours_shift, ref= "0")
View(together)
together <- together %>%
select(-c(gp, "w.y", "l.y", min, w_pct, plus_minus:cfparams))
data1011 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1011.csv")
data1112 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1112.csv")
data1213 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1213.csv")
data1314 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1314.csv")
data1415 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1415.csv")
data1516 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1516.csv")
data1617 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1617.csv")
data1718 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1718.csv")
data1819 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1819.csv")
together <- rbind(data1011, data1112)
together <- rbind(together, data1213)
together <- rbind(together, data1314)
together <- rbind(together, data1415)
together <- rbind(together, data1516)
together <- rbind(together, data1617)
together <- rbind(together, data1718)
together <- rbind(together, data1819)
capped_score_diffs <- c()
for (i in c(1:nrow(together))) {
sd = together$score_diff[i]
if (sd < (-30)) {
sd = -30
}
else if (sd > 30) {
sd = 30
}
capped_score_diffs <- c(capped_score_diffs, sd)
}
together <- together %>%
mutate(capped_score_diff = capped_score_diffs) %>%
mutate(hours_shift = as.factor(shift))
together$hours_shift <-relevel(together$hours_shift, ref= "0")
View(together)
together <- together %>%
select(-c(gp, "w.y", "l.y", min, w_pct, plus_minus:cfparams))
View(together)
together <- together %>%
mutate(off_rating_diff = off_rating - opp_off_rating) %>%
mutate(def_rating_diff = def_rating - opp_def_rating) %>%
mutate(fgm_diff = fgm - opp_fgm) %>%
mutate(fg_pct_diff = fg_pct - opp_fg_pct) %>%
mutate(fg3m_diff = fg3m - opp_fg3m) %>%
mutate(fg3_pct_diff = fg3_pct - opp_fg3_pct) %>%
mutate(ftm_diff = ftm - opp_ftm) %>%
mutate(ft_pct_diff = ft_pct - opp_ft_pct) %>%
mutate(reb_diff = reb - opp_reb) %>%
mutate(ast_diff = ast- opp_ast) %>%
mutate(tov_diff = tov - opp_tov) %>%
mutate(stl_diff = stl - opp_stl) %>%
mutate(blk_diff = blk - opp_blk) %>%
mutate(win_percent_diff = win_percent_diff *100)
visitors <- filter(together, Visitor == TRUE)
no_duplicates <- together[!duplicated(together$game_id),]
# This model does not use duplicates --------------------------------------
performance_lm <- lm(score_diff ~ net_rating_diff + fgm_diff+ fg_pct_diff +
fg3m_diff + fg3_pct_diff + ftm_diff + ft_pct_diff +
ast_diff + reb_diff + tov_diff + stl_diff + blk_diff,
data = no_duplicates)
summary(performance_lm)
# This model does not use duplicates --------------------------------------
performance_lm <- lm(score_diff ~ net_rating_diff + fgm_diff +
fg3m_diff + ftm_diff  +
ast_diff + reb_diff + tov_diff + stl_diff + blk_diff,
data = no_duplicates)
summary(performance_lm)
# This model does not use duplicates --------------------------------------
performance_lm <- lm(score_diff ~ win_percent_diff + fgm_diff +
fg3m_diff + ftm_diff  +
ast_diff + reb_diff + tov_diff + stl_diff + blk_diff,
data = no_duplicates)
summary(performance_lm)
# This model does not use duplicates --------------------------------------
performance_lm <- lm(score_diff ~ win_percent_diff +
fg3m_diff + ftm_diff  +
ast_diff + reb_diff + tov_diff + stl_diff + blk_diff,
data = no_duplicates)
summary(performance_lm)
# This model does not use duplicates --------------------------------------
performance_lm <- lm(score_diff ~ win_percent_diff + fg_pct_diff
fg3m_diff + ftm_diff  +
ast_diff + reb_diff + tov_diff + stl_diff + blk_diff,
data = no_duplicates)
# This model does not use duplicates --------------------------------------
performance_lm <- lm(score_diff ~ win_percent_diff + fg_pct_diff +
fg3m_diff + ftm_diff  +
ast_diff + reb_diff + tov_diff + stl_diff + blk_diff,
data = no_duplicates)
summary(performance_lm)
# This model does not use duplicates --------------------------------------
performance_lm <- lm(score_diff ~ win_percent_diff + fg_pct_diff +
fg3m_diff + ftm_diff  +
reb_diff + tov_diff + stl_diff + blk_diff,
data = no_duplicates)
summary(performance_lm)
# This model does not use duplicates --------------------------------------
performance_lm <- lm(score_diff ~ win_percent_diff + fg_pct_diff +
fg3m_diff + ftm_diff  +
reb_diff + tov_diff + stl_diff,
data = no_duplicates)
summary(performance_lm)
# This model does not use duplicates --------------------------------------
performance_lm <- lm(score_diff ~ win_percent_diff + fgm_diff + fg_pct_diff +
fg3m_diff + ftm_diff  +
reb_diff + ast_diff + stl_diff + blk_diff + tov_diff,
data = no_duplicates)
summary(performance_lm)
# This model does not use duplicates --------------------------------------
performance_lm <- lm(score_diff ~ win_percent_diff + fg_pct_diff +
fg3m_diff + ftm_diff  +
reb_diff + ast_diff + stl_diff + blk_diff + tov_diff,
data = no_duplicates)
summary(performance_lm)
# This model does not use duplicates --------------------------------------
performance_lm <- lm(score_diff ~ win_percent_diff + net_rating_diff + fg_pct_diff +
fg3m_diff + ftm_diff  +
reb_diff + ast_diff + stl_diff + blk_diff + tov_diff,
data = no_duplicates)
summary(performance_lm)
# Visitors Model ----------------------------------------------------------
visitors_lm <- lm(score_diff ~ Rest + Distance + hours_shift + three_in_four + b2b_2nd,
data = visitors)
summary(visitors_lm)
# Visitors Model ----------------------------------------------------------
visitors_lm <- lm(score_diff ~ win_percent_diff + Distance + Rest  + hours_shift + three_in_four + b2b_2nd,
data = visitors)
summary(visitors_lm)
# Visitors Model ----------------------------------------------------------
travel_visitors_lm <- lm(score_diff ~ win_percent_diff + Distance + Rest  + hours_shift + three_in_four + b2b_2nd,
data = visitors)
summary(visitors_lm)
# Visitors Model ----------------------------------------------------------
travel_visitors_lm <- lm(score_diff ~ Distance + Rest
+ hours_shift + three_in_four + b2b_2nd,
data = visitors)
summary(visitors_lm)
summary(travel_visitors_lm)
# Visitors Model ----------------------------------------------------------
travel_visitors_lm <- lm(score_diff ~ win_percent_diff + Distance + Rest
+ hours_shift + three_in_four + b2b_2nd,
data = visitors)
summary(travel_visitors_lm)
datos <- nba_travel(start_season = 2010, end_season = 2019)
datos <- nba_travel(start_season = 2014, end_season = 2015)
View(datos)
datos <- nba_travel(start_season = 2015, end_season = 2015)
nba_travel_plot(data = datos,
season = 2015,
city_color = "white",
plot_background_fill = "black",
land_color = "gray",
caption_color = "lightblue")
nba_travel_plot(data = datos,
season = 2015,
team = c("Golden State Warriors","Denver Nugggets", "Atlanta Hawks", "Boston Celtics")
city_color = "white",
plot_background_fill = "black",
land_color = "gray",
caption_color = "lightblue")
nba_travel_plot(data = datos,
season = 2015,
team = c("Golden State Warriors","Denver Nugggets", "Atlanta Hawks", "Boston Celtics"),
city_color = "white",
plot_background_fill = "black",
land_color = "gray",
caption_color = "lightblue")
nba_travel_plot(data = datos,
season = 2015,
team = c("Golden State Warriors","Denver Nuggets", "Atlanta Hawks", "Boston Celtics"),
city_color = "white",
plot_background_fill = "black",
land_color = "gray",
caption_color = "lightblue")
nba_travel_plot(data = datos,
season = 2015,
team = c("Golden State Warriors","Denver Nuggets", "Atlanta Hawks", "Boston Celtics"),
city_color = "white",
plot_background_fill = "black",
land_color = "gray",
caption_color = "lightblue",
ncolumns = 2)
View(data1617)
library(ggmap)
library(teamcolors)
library(usmap)
library(ggplot2)
library(maps)
library(mapdata)
library(dplyr)
library(tidyverse)
data1415 <- read_csv("/Users/matthewyep/Desktop/Carnegie Mellon/CMU-NBA/data/regseason1415.csv")
cumulative_distance1415 <- data1415 %>%
group_by(Team) %>%
summarise_at(vars(Distance),
list(total_distance_traveled = sum))
home_stadium_coords <- data1415 %>%
filter(Visitor == FALSE) %>%
select(Team, Latitude, Longitude) %>%
distinct()
coords_and_distance <- merge(x = cumulative_distance1415,  y= home_stadium_coords,
by = "Team")
usa <- map_data("usa")
states <- map_data("state")
ggplot() + geom_polygon(data = states, aes(x=long, y = lat, fill = region, group = group), fill = "azure2", color = "gray") +
coord_fixed(1.3) +
geom_point(data = coords_and_distance, aes(x=Longitude, y=Latitude,
size = total_distance_traveled),
alpha = 0.8) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank(),
legend.position = "bottom")
nba_travel_plot(data = datos,
season = 2015,
team = c("Golden State Warriors","Denver Nuggets", "Cleveland Cavaliers", "Boston Celtics"),
city_color = "white",
plot_background_fill = "black",
land_color = "gray",
caption_color = "lightblue",
ncolumns = 2)
ggplot() + geom_polygon(data = states, aes(x=long, y = lat, fill = region, group = group), fill = "azure2", color = "gray") +
coord_fixed(1.3) +
geom_point(data = coords_and_distance, aes(x=Longitude, y=Latitude,
size = total_distance_traveled),
alpha = 0.8) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank(),
legend.position = "bottom")
ggplot() + geom_polygon(data = states, aes(x=long, y = lat, fill = region, group = group), fill = "azure2", color = "gray") +
coord_fixed(1.3) +
geom_point(data = coords_and_distance, aes(x=Longitude, y=Latitude,
size = total_distance_traveled),
alpha = 0.8) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank(),
legend.position = "bottom") +
abline(v = 120)
ggplot() + geom_polygon(data = states, aes(x=long, y = lat, fill = region, group = group), fill = "azure2", color = "gray") +
coord_fixed(1.3) +
geom_point(data = coords_and_distance, aes(x=Longitude, y=Latitude,
size = total_distance_traveled),
alpha = 0.8) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank(),
legend.position = "bottom") +
geom_vline(v = 120)
ggplot() + geom_polygon(data = states, aes(x=long, y = lat, fill = region, group = group), fill = "azure2", color = "gray") +
coord_fixed(1.3) +
geom_point(data = coords_and_distance, aes(x=Longitude, y=Latitude,
size = total_distance_traveled),
alpha = 0.8) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank(),
legend.position = "bottom") +
geom_vline(120)
ggplot() + geom_polygon(data = states, aes(x=long, y = lat, fill = region, group = group), fill = "azure2", color = "gray") +
coord_fixed(1.3) +
geom_point(data = coords_and_distance, aes(x=Longitude, y=Latitude,
size = total_distance_traveled),
alpha = 0.8) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank(),
legend.position = "bottom") +
geom_vline(xintercept = 120)
View(coords_and_distance)
ggplot() + geom_polygon(data = states, aes(x=long, y = lat, fill = region, group = group), fill = "azure2", color = "gray") +
coord_fixed(1.3) +
geom_point(data = coords_and_distance, aes(x=Longitude, y=Latitude,
size = total_distance_traveled),
alpha = 0.8) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank(),
legend.position = "bottom") +
geom_vline(xintercept = -120)
ggplot() + geom_polygon(data = states, aes(x=long, y = lat, fill = region, group = group), fill = "azure2", color = "gray") +
coord_fixed(1.3) +
geom_point(data = coords_and_distance, aes(x=Longitude, y=Latitude,
size = total_distance_traveled),
alpha = 0.8) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank(),
legend.position = "bottom")
nba_travel_plot(data = datos,
season = 2015,
team = c("Golden State Warriors","Denver Nuggets", "Cleveland Cavaliers", "Boston Celtics"),
city_color = "white",
plot_background_fill = "black",
land_color = "gray",
caption_color = "lightblue",
ncolumns = 2)
performance_visitors_lm <- lm(score_diff ~ win_percent_diff + fg_pct_diff +
fg3m_diff + ftm_diff +
reb_diff + tov_diff + stl_diff + blk_diff,
data = visitors)
summary(performance_visitors_lm)
# Visitors Model ----------------------------------------------------------
travel_visitors_lm <- lm(score_diff ~ win_percent_diff + Distance + Rest
+ hours_shift + three_in_four + b2b_2nd,
data = visitors)
summary(travel_visitors_lm)
View(cumulative_distance1415)
ggplot() + geom_polygon(data = states, aes(x=long, y = lat, fill = region, group = group), fill = "azure2", color = "gray") +
coord_fixed(1.3) +
geom_point(data = coords_and_distance, aes(x=Longitude, y=Latitude,
size = total_distance_traveled),
alpha = 0.8) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank(),
legend.position = "bottom")
nba_travel_plot(data = datos,
season = 2015,
team = c("Golden State Warriors","Denver Nuggets", "Cleveland Cavaliers", "Boston Celtics"),
city_color = "white",
plot_background_fill = "black",
land_color = "gray",
caption_color = "lightblue",
ncolumns = 2)
xaringan:::inf_mr()
